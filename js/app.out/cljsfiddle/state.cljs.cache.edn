;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name cljsfiddle.state, :imports nil, :requires nil, :uses nil, :defs {state {:name cljsfiddle.state/state, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 5, :column 1, :end-line 5, :end-column 15, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 5, :column 10, :end-line 5, :end-column 15}}, empty-editor-state {:name cljsfiddle.state/empty-editor-state, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 7, :column 1, :end-line 7, :end-column 24, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 7, :column 6, :end-line 7, :end-column 24}}, update-state-text {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 14, :column 7, :end-line 14, :end-column 24, :arglists (quote ([state new-text]))}, :name cljsfiddle.state/update-state-text, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :end-column 24, :method-params ([state new-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state new-text]))}, update-text {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([new-text]))}, :name cljsfiddle.state/update-text, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :end-column 18, :method-params ([new-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-text]))}, read-state {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([]))}, :name cljsfiddle.state/read-state, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, cm-instance {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :line 23, :column 7, :end-line 23, :end-column 18, :arglists (quote ([]))}, :name cljsfiddle.state/cm-instance, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/state.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:watcher :mode :indent-mode :cm :codemirror-box :text}, :order [:text :mode :cm :watcher :indent-mode :codemirror-box]}, :doc "State of the editors on our page."}