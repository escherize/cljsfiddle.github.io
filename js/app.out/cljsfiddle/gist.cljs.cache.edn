;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name cljsfiddle.gist, :imports nil, :requires {ajax ajax.core, ajax.core ajax.core, url cemerick.url, cemerick.url cemerick.url, r reagent.core, reagent.core reagent.core}, :uses {POST ajax.core, GET ajax.core}, :defs {load {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :line 6, :column 7, :end-line 6, :end-column 11, :arglists (quote ([id & [callback]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(id [callback])], :arglists ([id & [callback]]), :arglists-meta (nil)}}, :name cljsfiddle.gist/load, :variadic true, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(id [callback])], :arglists ([id & [callback]]), :arglists-meta (nil)}, :method-params [(id [callback])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([id & [callback]])}, set-url {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :line 19, :column 7, :end-line 19, :end-column 14, :arglists (quote ([url]))}, :name cljsfiddle.gist/set-url, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :end-column 14, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, current-url {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :line 22, :column 7, :end-line 22, :end-column 18, :arglists (quote ([]))}, :name cljsfiddle.gist/current-url, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, assoc-anchor {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :line 25, :column 7, :end-line 25, :end-column 19, :arglists (quote ([{:keys [anchor], :as url} key value]))}, :name cljsfiddle.gist/assoc-anchor, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :end-column 19, :method-params ([p__14266 key value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [anchor], :as url} key value]))}, get-anchor {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([key]))}, :name cljsfiddle.gist/get-anchor, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :end-column 17, :method-params ([key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([key]))}, save {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :line 34, :column 7, :end-line 34, :end-column 11, :arglists (quote ([string]))}, :name cljsfiddle.gist/save, :variadic false, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/gist.cljs", :end-column 11, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:description :format :keywords? :public :params :error-handler :with-credentials? :files :anchor :json :handler}, :order [:with-credentials? :handler :anchor :params :format :keywords? :error-handler :description :public :files :json]}, :doc nil}