;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name cljsfiddle.samples-pane, :imports nil, :requires {cljsfiddle.state cljsfiddle.state}, :uses {cm-instance cljsfiddle.state, update-text cljsfiddle.state}, :defs {option-button {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/samples_pane.cljs", :line 4, :column 7, :end-line 4, :end-column 20, :arglists (quote ([title fill & [callback]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(title fill [callback])], :arglists ([title fill & [callback]]), :arglists-meta (nil)}}, :name cljsfiddle.samples-pane/option-button, :variadic true, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/samples_pane.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(title fill [callback])], :arglists ([title fill & [callback]]), :arglists-meta (nil)}, :method-params [(title fill [callback])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists ([title fill & [callback]])}, samples-pane {:protocol-inline nil, :meta {:file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/samples_pane.cljs", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([& [callback]])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([callback])], :arglists ([& [callback]]), :arglists-meta (nil)}}, :name cljsfiddle.samples-pane/samples-pane, :variadic true, :file "/Users/bcm/.boot/cache/tmp/Users/bcm/dv/cljsfiddle/1dub/-grrwi1/cljsfiddle/samples_pane.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([callback])], :arglists ([& [callback]]), :arglists-meta (nil)}, :method-params [([callback])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists ([& [callback]])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:div.two.wide.column :text-align :div.ui.vertical.basic.buttons :margin-top :on-click :center :style :div.ui.button :h2 :span}, :order [:div.ui.button :on-click :div.two.wide.column :span :style :text-align :center :h2 :div.ui.vertical.basic.buttons :margin-top]}, :doc nil}